name: Deploy Docker Image to EC2

on:
  push:
    branches:
      - main
    paths:
      - 'backend/Dockerfile'
      - 'frontend/Dockerfile'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Build
      uses: docker/build-push-action@v5

    - name: Login to DockerHub
      run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN}}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

    - name: Build and push Docker image 1
      run: |
        docker build -t kingsleyzikora/backend-app:latest . ./backend/
        docker build -t kingsleyzikora/frontend-app:latest . ./frontend/
        docker push kingsleyzikora/backend-app
        docker push kingsleyzikora/frontend-app

    - name: Install SSH Key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy Docker image to EC2
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_INSTANCE_IP }} << 'EOF'
        docker pull kingsleyzikora/backend-app:latest .
        docker pull kingsleyzikora/frontend-app:latest .
        docker stop $(docker ps -a -q) || true
        docker run -d --name backend --network my-network -p 3001:3000 kingsleyzikora/backend-app:latest .
        docker run -d --name frontend --network my-network -p 80:80 kingsleyzikora/frontend-app:latesst .
        EOF

        # ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_INSTANCE_IP }} << 'EOF'
        # docker pull kingsleyzikora/frontend-app .
        # docker stop $(docker ps -a -q) || true
        # docker run -d --name frontend --network my-network -p 80:80 kingsleyzikora/frontend-app .
        # EOF 
